using System.IO;
using ScriptEngine.Machine;

namespace osdf
{
	public class Server
	{
		private static string separator = Path.DirectorySeparatorChar.ToString();
		private static IRuntimeContextInstance startupScript = DeclarativeForms.GlobalContext().StartupScript();
		private static string pathStartupScript = startupScript.GetPropValue(startupScript.FindProperty("Path")).AsString();

		public static string server = @"
Перем КС;
Перем Клиент;
Перем ИдентификаторКлиента;

Функция РазобратьСтроку(Строка, Разделитель)
	Стр = СтрЗаменить(Строка,Разделитель,символы.ПС);
	М = Новый Массив;
	Если ПустаяСтрока(Стр) Тогда
		Возврат М;
	КонецЕсли;
	Для Ч = 1 По СтрЧислоСтрок(Стр) Цикл
		М.Добавить(СтрПолучитьСтроку(Стр,Ч));
	КонецЦикла;
	Возврат М;
КонецФункции

Функция ТекстСообщения(парам)
	СимволПС = Символы.ВК + Символы.ПС;
	
	// Ответ для браузер-клиента нужно сформировать по определенным правилам, с заголовком и прочими составляющими.
	Массив = Новый Массив();
	Массив.Добавить(""HTTP/1.1 200 OK"");
	Массив.Добавить(""Server: OneScriptDeclarativeForms"");
	Массив.Добавить(""Content-Type: text/html; charset=utf-8"");
	Массив.Добавить(СимволПС);
	
	ДвоичныеДанныеЗаголовков = ПолучитьДвоичныеДанныеИзСтроки(СтрСоединить(Массив, СимволПС), ""utf-8"");
	
	// Для наглядности, что всё работает. Параметр1 - это тело переданного запроса.
	// ДвоичныеДанныеТела = ПолучитьДвоичныеДанныеИзСтроки("" Всё работает!!!! "" + ТекущаяУниверсальнаяДатаВМиллисекундах() + Символы.ПС + Параметр1);
	// ДвоичныеДанныеТела = ПолучитьДвоичныеДанныеИзСтроки("" Всё работает!!!! "" + ТекущаяУниверсальнаяДатаВМиллисекундах());
	// ДвоичныеДанныеТела = ПолучитьДвоичныеДанныеИзСтроки(""alert('Hello, World!')"");
	ДвоичныеДанныеТела = ПолучитьДвоичныеДанныеИзСтроки(парам);
	
	ДвоичныеДанныеОтвета = Новый Массив;
	ДвоичныеДанныеОтвета.Добавить(ДвоичныеДанныеЗаголовков);
	ДвоичныеДанныеОтвета.Добавить(ДвоичныеДанныеТела);
	
	Ответ = СоединитьДвоичныеДанные(ДвоичныеДанныеОтвета);

	Возврат ПолучитьСтрокуИзДвоичныхДанных(Ответ); 
КонецФункции

Процедура Сервер_ПриПодключенииКлиента() Экспорт
	СерверКлиент = КС.СерверКлиентАрг().Клиент;
	ИдентификаторКлиента = СерверКлиент.ИдентификаторКлиента;
	// Сообщить(""Клиент подключен. Идентификатор клиента = "" + СерверКлиент.ИдентификаторКлиента + "" "" + ТекущаяДата());
КонецПроцедуры

Процедура Сервер_ПриОтключенииКлиента() Экспорт
	СерверКлиент = КС.СерверКлиентАрг().Клиент;
	// Сообщить(""Клиент отключен. Идентификатор клиента = "" + СерверКлиент.ИдентификаторКлиента + "" "" + ТекущаяДата());
КонецПроцедуры

Процедура Сервер_ПриПолученииСообщения() Экспорт
	Сообщение = КС.АргументыСобытия.Сообщение;
	Отправитель = КС.АргументыСобытия.Отправитель;
	ДФ.ОбработатьСообщение(Сообщение.Текст);
	
	// Сообщить(""Сообщение.Текст = "" + Сообщение.Текст);
	Если Сообщение.Текст = ""ConstantClient5du4fsjiwixxf"" Тогда
		Клиент = КС.АргументыСобытия.Отправитель;
		ДФ.ОбщаяСтруктура.Вставить(""Клиент"", Клиент);
		ДФ.ОбщаяСтруктура.Вставить(""КС"", КС);
	Иначе
	КонецЕсли;

	// Сообщить(""ДФ.СтрокаФункций = "" + ДФ.СтрокаФункций);
	Попытка
		Если Сообщение.Текст = ""ConstantClient5du4fsjiwixxf"" Тогда
			Если ИдентификаторКлиента = 1 Тогда
				Клиент.ОтправитьСообщение(КС.СообщениеТекст(ДФ.СтрокаФункций));
			КонецЕсли;
		Иначе
			Отправитель.ОтправитьСообщение(КС.СообщениеТекст(ТекстСообщения(ДФ.СтрокаФункций)));
		КонецЕсли;
	Исключение
	КонецПопытки;
	ДФ.СтрокаФункций = """";
	
	Если КС.РежимСтороннегоКлиента = КС.РежимКлиента.Браузер Тогда
		Если Сообщение.Текст = ""ConstantClient5du4fsjiwixxf"" Тогда
		Иначе
			Отправитель.Отключить(); // Нужно в случае клиента-браузера по протоколу http.
		КонецЕсли;
	КонецЕсли;
	// Сообщить(""== Событие обработано ======================================="");
КонецПроцедуры

ПодключитьВнешнююКомпоненту(""C:\444\~Деклар Форма\Классы\OneScriptClientServer.dll"");
КС = Новый КлиентСерверДляОдноСкрипта();

TCPСервер1 = КС.TCPСервер(ДФ.Порт);
TCPСервер1.ПриПодключенииКлиента = КС.Действие(ЭтотОбъект, ""Сервер_ПриПодключенииКлиента""); // Это свойство необходимо установить.
TCPСервер1.ПриОтключенииКлиента = КС.Действие(ЭтотОбъект, ""Сервер_ПриОтключенииКлиента""); // Это свойство необходимо установить.
TCPСервер1.ПриПолученииСообщения = КС.Действие(ЭтотОбъект, ""Сервер_ПриПолученииСообщения"");
КС.РежимСтороннегоКлиента = КС.РежимКлиента.Браузер;

// Запустим сервер
TCPСервер1.Начать();
// Сообщить(""Сервер запущен"");

// Запустим цикл обработки событий
Пока КС.Продолжать Цикл
	КС.ПолучитьСобытие().Выполнить();
КонецЦикла;
";
	}
}
